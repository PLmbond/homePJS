/// <reference path="./profoundjs.d.ts" />

const fs = require("fs");
const path = require('path');

var exists = false;
try {
  var stat = fs.statSync(__dirname + "/profound.js");
  if (stat && stat.isFile()) exists = true;
}
catch (err) {
  exists = false;
}
if (exists) {
  require("./profound.js");
}
else {
  module.constructor._originalResolveFilename = module.constructor._resolveFilename;
  module.constructor._resolveFilename = function(request, paths) {
    var filename;
    var parts = request.split(".");
    var extension = parts.pop();
    if (extension === "jse") {
      filename = module.constructor._originalResolveFilename("./profound.jse", paths);
      if (path.sep !== "/") {
        while (request.includes("/")) request = request.replace("/", path.sep);
      }
      filename = filename.substr(0, filename.length - "profound.jse".length) + request;
    }
    else {
      filename = module.constructor._originalResolveFilename(request, paths);
    }
    return filename;
  }
  var jse = JSON.parse(fs.readFileSync(__dirname + "/profound.jse", "utf8"));
  process.require = require;
  var loader = new require("pjsloader")();
  require.extensions[".jse"] = function(module, filename) {
    var name = filename;
    if (name.substr(0, __dirname.length) === __dirname) name = name.substr(__dirname.length + 1);
    if (path.sep !== "/") {
      while (name.includes(path.sep)) name = name.replace(path.sep, "/");
    }
    return module._compile(loader.Load(jse[name]), filename);
  }
  for (var x in jse) require(x);
}

module.exports = profound;
